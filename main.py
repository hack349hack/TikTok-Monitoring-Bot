import logging
import asyncio
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters
from telegram import Update
from telegram.ext import ContextTypes

from config.settings import BOT_TOKEN
from bot.handlers.menu import handle_menu_callback
from bot.services.database import init_db
from bot.services.tiktok_parser import start_periodic_checking

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    welcome_text = f"""
üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

üéµ –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ —Å —Ç–≤–æ–∏–º–∏ –ø–µ—Å–Ω—è–º–∏ –≤ TikTok.

üìã –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
1. –ü—Ä–∏—Å—ã–ª–∞–µ—à—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Å–Ω—é –≤ TikTok
2. –Ø –Ω–∞—Ö–æ–∂—É –≤—Å–µ –≤–∏–¥–µ–æ —Å —ç—Ç–æ–π –ø–µ—Å–Ω–µ–π
3. –ü—Ä–∏—Å—ã–ª–∞—é —Ç–µ–±–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–∏–¥–µ–æ
4. –ü–æ—Å—Ç–æ—è–Ω–Ω–æ –∏—â—É –Ω–æ–≤—ã–µ –∏ –ø—Ä–∏—Å—ã–ª–∞—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

üì± –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
    """
    
    from bot.handlers.menu import get_main_keyboard
    keyboard = get_main_keyboard()
    
    if update.message:
        await update.message.reply_text(welcome_text, reply_markup=keyboard)
    else:
        await update.callback_query.message.reply_text(welcome_text, reply_markup=keyboard)

async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–æ–∫)"""
    text = update.message.text.strip()
    
    if text.startswith(('https://www.tiktok.com/music/', 'https://vm.tiktok.com/', 'https://tiktok.com/music/')):
        await handle_song_link(update, context, text)
    else:
        from bot.handlers.menu import get_main_keyboard
        await update.message.reply_text(
            "üìé –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Å–Ω—é –≤ TikTok –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è\n\n–ü—Ä–∏–º–µ—Ä: https://www.tiktok.com/music/–Ω–∞–∑–≤–∞–Ω–∏–µ-–ø–µ—Å–Ω–∏-723415689123",
            reply_markup=get_main_keyboard()
        )

async def handle_song_link(update: Update, context: ContextTypes.DEFAULT_TYPE, link: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–µ—Å–Ω—é"""
    from bot.services.tiktok_parser import process_song_link
    from bot.handlers.menu import get_main_keyboard
    
    await update.message.reply_text("üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Å–Ω—é...")
    
    success, message = await process_song_link(update.effective_user.id, link)
    
    if success:
        keyboard = get_main_keyboard()
        await update.message.reply_text(message, reply_markup=keyboard)
    else:
        keyboard = get_main_keyboard()
        await update.message.reply_text(f"‚ùå {message}", reply_markup=keyboard)

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.error("Exception while handling an update:", exc_info=context.error)

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_menu_callback))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))
    
    # –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    start_periodic_checking(application)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()

if __name__ == "__main__":
    main()
